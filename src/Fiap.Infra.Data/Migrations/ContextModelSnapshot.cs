// <auto-generated />
using System;
using Fiap.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Fiap.Infra.Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Fiap.Domain.GameAggregate.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_Games_Name");

                    b.HasIndex("PromotionId")
                        .HasDatabaseName("IX_Games_PromotionId");

                    b.ToTable("Games", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "Action RPG",
                            Name = "The Legend of Zelda: Breath of the Wild"
                        },
                        new
                        {
                            Id = 2,
                            Genre = "Action RPG",
                            Name = "The Witcher 3: Wild Hunt"
                        },
                        new
                        {
                            Id = 3,
                            Genre = "Action-adventure",
                            Name = "Red Dead Redemption 2"
                        },
                        new
                        {
                            Id = 4,
                            Genre = "Action RPG",
                            Name = "Dark Souls III"
                        },
                        new
                        {
                            Id = 5,
                            Genre = "Action-adventure",
                            Name = "God of War"
                        },
                        new
                        {
                            Id = 6,
                            Genre = "Sandbox",
                            Name = "Minecraft"
                        },
                        new
                        {
                            Id = 7,
                            Genre = "First-person shooter",
                            Name = "Overwatch"
                        },
                        new
                        {
                            Id = 8,
                            Genre = "Action-adventure",
                            Name = "The Last of Us Part II"
                        });
                });

            modelBuilder.Entity("Fiap.Domain.OutboxAggregate.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OccuredOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ProcessedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessages", (string)null);
                });

            modelBuilder.Entity("Fiap.Domain.PromotionAggregate.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Promotions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            StartDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Fiap.Domain.GameAggregate.Game", b =>
                {
                    b.HasOne("Fiap.Domain.PromotionAggregate.Promotion", "Promotion")
                        .WithMany("Games")
                        .HasForeignKey("PromotionId");

                    b.OwnsOne("Fiap.Domain.Common.ValueObjects.Money", "Price", b1 =>
                        {
                            b1.Property<int>("GameId")
                                .HasColumnType("integer");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("character varying(3)")
                                .HasColumnName("PriceCurrency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric")
                                .HasColumnName("Price");

                            b1.HasKey("GameId");

                            b1.ToTable("Games");

                            b1.WithOwner()
                                .HasForeignKey("GameId");

                            b1.HasData(
                                new
                                {
                                    GameId = 1,
                                    Currency = "USD",
                                    Value = 299.00m
                                },
                                new
                                {
                                    GameId = 2,
                                    Currency = "BRL",
                                    Value = 39.99m
                                },
                                new
                                {
                                    GameId = 3,
                                    Currency = "BRL",
                                    Value = 49.99m
                                },
                                new
                                {
                                    GameId = 4,
                                    Currency = "BRL",
                                    Value = 29.99m
                                },
                                new
                                {
                                    GameId = 5,
                                    Currency = "BRL",
                                    Value = 39.99m
                                },
                                new
                                {
                                    GameId = 6,
                                    Currency = "BRL",
                                    Value = 26.95m
                                },
                                new
                                {
                                    GameId = 7,
                                    Currency = "BRL",
                                    Value = 39.99m
                                },
                                new
                                {
                                    GameId = 8,
                                    Currency = "BRL",
                                    Value = 49.99m
                                });
                        });

                    b.Navigation("Price")
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("Fiap.Domain.PromotionAggregate.Promotion", b =>
                {
                    b.OwnsOne("Fiap.Domain.Common.ValueObjects.Money", "Discount", b1 =>
                        {
                            b1.Property<int>("PromotionId")
                                .HasColumnType("integer");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("character varying(3)")
                                .HasColumnName("DiscountCurrency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric")
                                .HasColumnName("DiscountValue");

                            b1.HasKey("PromotionId");

                            b1.ToTable("Promotions");

                            b1.WithOwner()
                                .HasForeignKey("PromotionId");

                            b1.HasData(
                                new
                                {
                                    PromotionId = 1,
                                    Currency = "USD",
                                    Value = 10.15m
                                },
                                new
                                {
                                    PromotionId = 2,
                                    Currency = "USD",
                                    Value = 15.98m
                                },
                                new
                                {
                                    PromotionId = 3,
                                    Currency = "USD",
                                    Value = 20.97m
                                });
                        });

                    b.Navigation("Discount")
                        .IsRequired();
                });

            modelBuilder.Entity("Fiap.Domain.PromotionAggregate.Promotion", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
